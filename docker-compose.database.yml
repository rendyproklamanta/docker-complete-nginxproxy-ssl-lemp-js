version: '3.6'

# Database Services ----------------------------------
services:

  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - TZ=Asia/Jakarta
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/MYSQL_ROOT_PASSWORD
    volumes:
      - ./mysql/data/:/var/lib/mysql
      - ./mysql/my.cnf:/etc/my.cnf
    secrets:
      - MYSQL_ROOT_PASSWORD
      
  pma:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8000:80"

  # Get backup files : docker container exec mysql-cron-backup ls /backup
  # Restore backup file : docker container exec mysql-cron-backup /restore.sh /backup/<your_sql_backup_gz_file>
  mysql-cron-backup:
    image: fradelg/mysql-cron-backup
    depends_on:
      - db
    volumes:
      - ./mysql/backup:/backup
    environment:
      - TZ=Asia/Jakarta
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASS_FILE=/run/secrets/MYSQL_ROOT_PASSWORD
      - MAX_BACKUPS=10
      - INIT_BACKUP=1
      - CRON_TIME=0 0 * * *
    secrets:
      - MYSQL_ROOT_PASSWORD
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    restart: always

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081

# printf "mysqlrootpass" | docker secret create MYSQL_ROOT_PASSWORD -
# OR
# openssl rand -base64 12 | docker secret create db_root_password -
# get passsword : docker exec -it $(docker ps -f name=db -q) cat /run/secrets/MYSQL_ROOT_PASSWORD
secrets:
  MYSQL_ROOT_PASSWORD:
    external: true
         
networks:
  default:
    external:
      name: nginx-proxy
